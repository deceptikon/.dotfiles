### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term kitty
# layout insensitive binding
set $mybind bindsym --to-code
set $swayr env RUST_BACKTRACE=1 /home/lexx/swayr/target/debug/swayr
exec env RUST_BACKTRACE=1 swayrd > /tmp/swayrd.log 2>&1

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# set $menu dmenu_path | dmenu | xargs swaymsg exec --
set $menu wofi --show=drun --lines=8 --prompt="" -i


font pango:TerminessTTF Nerd Font Mono 14px

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg /home/lexx/Media/nazgul-bg.jpg fill
#
# Example configuration:
#
#output eDP-1 mode 3200x1800 position 0,0
#output DP-1 mode 2560x1440 position 1600,0
output HDMI-A-1 mode 2560x1440 position 0,0
output HDMI-A-1 transform 0 scale 1
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Input configuration

# input type:touchpad {
#     dwt enabled
#     tap enabled
#     natural_scroll disabled
#     middle_emulation enabled
# }

input type:keyboard {
    xkb_layout us,ru
    xkb_variant ,
    xkb_options grp:caps_toggle
}
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # Start a terminal
    $mybind $mod+Return exec $term

    # Kill focused window
    $mybind $mod+Shift+q kill

    # Start your launcher
    $mybind $mod+space exec $menu

    # shutdown menu
    $mybind $mod+Print exec ~/.config/shutdown-dmenu.sh

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    $mybind $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    $mybind $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#

    set $flashBorder swaymsg 'border pixel 3' && sleep .2 && swaymsg 'border pixel 0'
    # Move your focus around
    $mybind $mod+$left exec swaymsg focus left && $flashBorder
    $mybind $mod+$down exec swaymsg focus down && $flashBorder
    $mybind $mod+$up exec swaymsg focus up && $flashBorder
    $mybind $mod+$right exec swaymsg focus right && $flashBorder
    # Or use $mod+[up|down|left|right]
    $mybind $mod+Left exec swaymsg focus left && $flashBorder
    $mybind $mod+Down exec swaymsg focus down && $flashBorder
    $mybind $mod+Up exec swaymsg focus up && $flashBorder
    $mybind $mod+Right exec swaymsg focus right && $flashBorder

    # Move the focused window with the same, but add Shift
    $mybind $mod+Shift+$left move left
    $mybind $mod+Shift+$down move down
    $mybind $mod+Shift+$up move up
    $mybind $mod+Shift+$right move right
    # Ditto, with arrow keys
    $mybind $mod+Shift+Left move left
    $mybind $mod+Shift+Down move down
    $mybind $mod+Shift+Up move up
    $mybind $mod+Shift+Right move right

    focus_follows_mouse yes
#
# Workspaces:
#
    # set $ws1 
    # set $ws2 
    # set $ws3 
    # set $ws4 
    # set $ws5 5
    # set $ws6 6
    # set $ws7 7
    # set $ws8 8
    # set $ws9 9
    # set $ws0 

    set $ws1 1
    set $ws2 2
    set $ws3 3
    set $ws4 4
    set $ws5 5
    set $ws6 6
    set $ws7 7
    set $ws8 8
    set $ws9 9
    set $ws0 0

    # switch to workspace
    $mybind $mod+1 workspace $ws1
    $mybind $mod+2 workspace $ws2
    $mybind $mod+3 workspace $ws3
    $mybind $mod+4 workspace $ws4
    $mybind $mod+5 workspace $ws5
    $mybind $mod+6 workspace $ws6
    $mybind $mod+7 workspace $ws7
    $mybind $mod+8 workspace $ws8
    $mybind $mod+9 workspace $ws9
    $mybind $mod+0 workspace $ws0

    # Move focused container to workspace
    $mybind $mod+Ctrl+1 move container to workspace $ws1
    $mybind $mod+Ctrl+2 move container to workspace $ws2
    $mybind $mod+Ctrl+3 move container to workspace $ws3
    $mybind $mod+Ctrl+4 move container to workspace $ws4
    $mybind $mod+Ctrl+5 move container to workspace $ws5
    $mybind $mod+Ctrl+6 move container to workspace $ws6
    $mybind $mod+Ctrl+7 move container to workspace $ws7
    $mybind $mod+Ctrl+8 move container to workspace $ws8
    $mybind $mod+Ctrl+9 move container to workspace $ws9
    $mybind $mod+Ctrl+0 move container to workspace $ws0

    # Move to workspace with focused container
    $mybind $mod+Shift+1 move container to workspace $ws1; workspace $ws1
    $mybind $mod+Shift+2 move container to workspace $ws2; workspace $ws2
    $mybind $mod+Shift+3 move container to workspace $ws3; workspace $ws3
    $mybind $mod+Shift+4 move container to workspace $ws4; workspace $ws4
    $mybind $mod+Shift+5 move container to workspace $ws5; workspace $ws5
    $mybind $mod+Shift+6 move container to workspace $ws6; workspace $ws6
    $mybind $mod+Shift+7 move container to workspace $ws7; workspace $ws7
    $mybind $mod+Shift+8 move container to workspace $ws8; workspace $ws8
    $mybind $mod+Shift+9 move container to workspace $ws9; workspace $ws9
    $mybind $mod+Shift+0 move container to workspace $ws0; workspace $ws0

    workspace_auto_back_and_forth yes

    # move windows to workspaces
    $mybind $mod+Ctrl+Left move workspace to output left
    $mybind $mod+Ctrl+Right move workspace to output right

    # Open applications on specific workspaces
    # assign [class="Thunderbird"] $ws1
    # assign [class="Pale moon"] $ws2
    # assign [class="Pcmanfm"] $ws3
    # assign [class="Skype"] $ws5

    # Open specific applications in floating mode
    for_window [title="alsamixer"] floating enable border pixel 1
    for_window [app_id="thunar" title="File operation progress"] floating enable border normal
    for_window [app_id="nm-connection-editor"] floating enable border normal
    for_window [app_id="pavucontrol"] floating enable border normal
    for_window [class="Clipgrab"] floating enable
    for_window [title="File Transfer*"] floating enable
    for_window [app_id="zenity"] floating enable
    for_window [class="Galculator"] floating enable border pixel 1
    for_window [class="GParted"] floating enable border normal
    for_window [title="i3_help"] floating enable sticky enable border normal
    for_window [class="Lightdm-settings"] floating enable
    for_window [class="Lxappearance"] floating enable sticky enable border normal
    for_window [title="MuseScore: Play Panel"] floating enable
    for_window [class="Nitrogen"] floating enable sticky enable border normal
    for_window [class="Oblogout"] fullscreen enable
    for_window [class="octopi"] floating enable
    for_window [title="About Pale Moon"] floating enable
    for_window [app_id="pamac-manager"] floating enable
    for_window [class="qt5ct"] floating enable sticky enable border normal
    for_window [class="Qtconfig-qt4"] floating enable sticky enable border normal
    for_window [class="Simple-scan"] floating enable border normal
    for_window [class="(?i)System-config-printer.py"] floating enable border normal
    for_window [class="Skype"] floating enable border normal
    for_window [class="Timeset-gui"] floating enable border normal
    for_window [class="(?i)virtualbox"] floating enable border normal
    for_window [class="Xfburn"] floating enable
    for_window [window_role="pop-up"] floating enable
    # for_window [app_id=""] floating enable, sticky enable, border none
    for_window [app_id="firefox" title="Picture in picture"] floating enable, sticky enable, border none
   #for_window [app_id="Google-chrome-unstable" title="Picture-in-Picture"] floating enable, sticky enable, border none
#   for_window [floating] border csd




    # telegram related settings
    $mybind $mod+grave [app_id="telegramdesktop"] scratchpad show

    for_window [app_id="telegramdesktop"] floating enable
    for_window [app_id="telegramdesktop" title="Telegram"] move scratchpad
    assign [app_id="Google-chrome"] -> $ws1
    assign [app_id="Code"] $ws2
    assign [class="GitAhead"] $ws3
    assign [class="Slack"] $ws4

# switch to workspace with urgent window automatically
for_window [urgent=latest] focus

# for_window [shell=".*"] title_format "%title :: %shell"
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    $mybind $mod+b splith
    $mybind $mod+v splitv

    # Switch the current container between different layout styles
    $mybind $mod+s layout stacking
    $mybind $mod+w layout tabbed
    $mybind $mod+e layout toggle split

    # Make the current focus fullscreen
    $mybind $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    $mybind $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    $mybind $mod+Ctrl+space focus mode_toggle

    # Move focus to the parent container
    $mybind $mod+a focus parent

    # show window on all workspaces
    $mybind $mod+equal sticky toggle
    $mybind $mod+c exec "swaymsg 'floating toggle; sticky toggle; resize shrink width 10000px; resize grow width 400px; resize shrink height 10000px; resize grow height 250px;move position 10px 10px;'"
    $mybind $mod+m exec "swaymsg 'floating toggle; resize shrink height 10000px; resize grow height 50px;move position 10px 10px;'"
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    $mybind $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    $mybind $mod+minus scratchpad show
#
# Media bindings
#
# $mybind XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
# $mybind XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
# $mybind XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
# $mybind XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle

$mybind XF86AudioRaiseVolume exec pamixer -ui 2 && pamixer --get-volume > $SWAYSOCK.wob
$mybind XF86AudioLowerVolume exec pamixer -ud 2 && pamixer --get-volume > $SWAYSOCK.wob
$mybind XF86AudioMute exec pamixer --toggle-mute && ( pamixer --get-mute && echo 0 > $SWAYSOCK.wob ) || pamixer --get-volume > $SWAYSOCK.wob

# $mybind XF86MonBrightnessDown exec brightnessctl set 5%-
# $mybind XF86MonBrightnessUp exec brightnessctl set +5%
#
#
$mybind $mod+F9 exec ddccontrol -r 0xd6 -w 4 dev:/dev/i2c-0 -v
$mybind $mod+F10 exec ddccontrol -r 0xd6 -w 1 dev:/dev/i2c-0 -v 

#exec touch /tmp/brightness
#exec ddcutil --bus 5 setvcp 10 100 | echo '100' > $SWAYSOCK.wob | echo '100' > /tmp/brightness
$mybind $mod+F11 exec ddcutil --bus 5 setvcp 10 + 10 | sed -En 's/.*\(([0-9]+)%\).*/\1/p' > $SWAYSOCK.wob
$mybind $mod+F12 exec ddcutil --bus 5 setvcp 10 - 10 | sed -En 's/.*\(([0-9]+)%\).*/\1/p' > $SWAYSOCK.wob
$mybind $mod+Shift+F11 exec ddcutil --bus 5 setvcp 10 100 | echo '100' > $SWAYSOCK.wob
$mybind $mod+Shift+F12 exec ddcutil --bus 5 setvcp 10 1 | echo '1' > $SWAYSOCK.wob

$mybind XF86MonBrightnessDown exec brightnessctl set 5%- | sed -En 's/.*\(([0-9]+)%\).*/\1/p' > $SWAYSOCK.wob
$mybind Shift+XF86MonBrightnessDown exec brightnessctl set 1%- | sed -En 's/.*\(([0-9]+)%\).*/\1/p' > $SWAYSOCK.wob
$mybind Ctrl+Shift+XF86MonBrightnessDown exec brightnessctl set 20 | sed -En 's/.*\(([0-9]+)%\).*/\1/p' > $SWAYSOCK.wob

$mybind XF86MonBrightnessUp exec brightnessctl set +5% | sed -En 's/.*\(([0-9]+)%\).*/\1/p' > $SWAYSOCK.wob
$mybind Shift+XF86MonBrightnessUp exec brightnessctl set +1% | sed -En 's/.*\(([0-9]+)%\).*/\1/p' > $SWAYSOCK.wob
$mybind Ctrl+Shift+XF86MonBrightnessUp exec brightnessctl set $(brightnessctl max) | sed -En 's/.*\(([0-9]+)%\).*/\1/p' > $SWAYSOCK.wob
$mybind XF86AudioPlay exec playerctl play-pause
$mybind XF86AudioNext exec playerctl next
$mybind XF86AudioPrev exec playerctl previous
# $mybind XF86Search exec bemenu-run


#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    $mybind $left resize shrink width 10px
    $mybind $down resize grow height 10px
    $mybind $up resize shrink height 10px
    $mybind $right resize grow width 10px

    # Ditto, with arrow keys
    $mybind Left resize shrink width 10px
    $mybind Down resize grow height 10px
    $mybind Up resize shrink height 10px
    $mybind Right resize grow width 10px

    # Return to default mode
    $mybind Return mode "default"
    $mybind Escape mode "default"
}
$mybind $mod+r mode "resize"
$mybind $mod+Tab exec $swayr next-window >> /tmp/swayr.log 2>&1
$mybind $mod+Shift+Tab exec $swayr prev-window >> /tmp/swayr.log 2>&1

#
# mode for swaynagmode - swaynag wrapper to accept keyboard commands
#
set $nag exec swaynagmode
mode "nag" {
  bindsym {
    Ctrl+d    mode "default"

    Ctrl+c    $nag --exit
    q         $nag --exit
    Escape    $nag --exit

    Return    $nag --confirm

    Tab       $nag --select prev
    Shift+Tab $nag --select next

    Left      $nag --select next
    Right     $nag --select prev

    Up        $nag --select next
    Down      $nag --select prev
  }
}

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    swaybar_command waybar
}
# toggle waybar visibility
$mybind $mod+x exec killall -SIGUSR1 waybar


#
# dunst notifier
#
$mybind Ctrl+Space exec dunstctl close
$mybind Ctrl+Shift+Space exec dunstctl close-all
$mybind Ctrl+grave exec dunstctl history-pop

#
# Borders
#

# A 10-pixel border around every window.
gaps inner 4

# Removes the title bar of each window.
default_border pixel 1
default_floating_border normal

# Hide borders
hide_edge_borders none

# change borders
$mybind $mod+u border none
$mybind $mod+y border pixel 1
$mybind $mod+n border normal

#
# name me
#
$mybind Ctrl+$mod+grave exec ~/.config/toggleDunst.sh && pkill -SIGRTMIN+9 waybar

#
# Start apps
#
$mybind $mod+F1 exec chromium
$mybind $mod+Shift+F1 exec google-chrome-unstable
$mybind $mod+F2 exec code --enable-features=UseOzonePlatform --ozone-platform=wayland
$mybind $mod+F3 exec nemo
$mybind $mod+Shift+s exec slurp | grim -g - - | wl-copy # screenshot selected area and put to clipboard


### Idle & lock configuration
#
# Example configuration:
#
# set $locker 'swaylock \
#         --screenshots \
#         --clock \
#         --indicator \
#         --indicator-idle-visible \
#         --indicator-radius 200 \
#         --indicator-thickness 4 \
#         --effect-blur 7x5 \
#         --effect-vignette 0.5:0.5 \
#         --ring-color 228b22 \
#         --key-hl-color 228b22 \
#         --line-color 00000000 \
#         --inside-color 00000022 \
#         --separator-color 00000000 \
#         --effect-greyscale \
#         --grace 10 \
#         --fade-in 0.2'
set $locker 'swaylock \
        --screenshots \
        --clock \
        --timestr %H:%M \
        --indicator \
        --indicator-idle-visible \
        --indicator-radius 200 \
        --indicator-thickness 8 \
        --effect-pixelate 4 \
        --effect-greyscale \
        --grace 10 \
        --fade-in 0.2'

set $idlelock 'swayidle -w timeout 300 "$locker" timeout 500 "swaymsg \'output * dpms off\'" resume "swaymsg \'output * dpms on\'" before-sleep "$locker"'

set $idle 'swayidle -w timeout 0 \'swaymsg "output * dpms off"\' resume \'swaymsg "output * dpms on"\''
# set $idle 'swayidle -w timeout 0 \'swaymsg "output * dpms off"\' resume \'swaymsg "output * dpms on"\' before-sleep $locker'
# exec $idlelock
$mybind $mod+Escape exec $idle
$mybind $mod+q exec $locker

# $mybind $mod+q exec $idle-and-lock



exec mkfifo $SWAYSOCK.wob && tail -f $SWAYSOCK.wob |wob -W 400 -H 20 -b 1 -a right -a top -M 20 -p 0 --bar-color '#008080ff'
exec --no-startup-id /home/lexx/.local/bin/sway-xkb-switcher
exec --no-startup-id /home/lexx/.config/inactive-transparency.py
exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
exec --no-startup-id nm-applet --indicator
exec --no-startup-id udiskie --appindicator -t
exec --no-startup-id dunst &
exec --no-startup-id ydotoold &
exec --no-startup-id libinput-gestures &
exec --no-startup-id poweralertd &
exec --no-startup-id autotiling &
# exec --no-startup-id $idlelock
# exec --no-startup-id blueman-applet &
# exec gammastep &

include /etc/sway/config.d/*
